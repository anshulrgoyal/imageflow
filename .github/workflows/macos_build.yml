#  NUGET_RUNTIME= UPLOAD_BUILD=True FETCH_COMMIT_SUFFIX=mac64
name: Test Linux

on:
  push:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: FranzDiebold/github-env-vars-action@v1.3.0
      - name: Install nasm, dssim
        run: brew install nasm dssim
      - name: Install Valgrind
        run: |
          brew tap LouisBrunner/valgrind
          brew install --HEAD LouisBrunner/valgrind/valgrind
      # - name: Count Unsafe code
      #   run: |
      #     cargo install cargo-count
      #     (cd imageflow_core && cargo count --unsafe-statistics)
      #     (cd imageflow_abi && cargo count --unsafe-statistics)
      #     (cd imageflow_tool && cargo count --unsafe-statistics)
      #     (cd imageflow_riapi && cargo count --unsafe-statistics)
      #     (cd imageflow_helpers && cargo count --unsafe-statistics)
      #     (cd imageflow_types && cargo count --unsafe-statistics)
      #     (cd imageflow_server && cargo count --unsafe-statistics)
      #     (cd c_components/lib && cargo count --unsafe-statistics)
      - name: Check Build
        run: cargo check --all
      - name: Build Release
        run: cargo build --all --release
        env:
          ESTIMATED_ARTIFACT_URL: https://s3-us-west-1.amazonaws.com/imageflow-nightlies/imageflow-${{env.GITHUB_REF_NAME_SLUG}}-${{env.GITHUB_SHA_SHORT}}-${{env.PACKAGE_SUFFIX}}.tar.gz
          ESTIMATED_DOCS_URL: https://s3-us-west-1.amazonaws.com/imageflow-nightlies/doc
          CI_SEQUENTIAL_BUILD_NUMBER: ${{env.GITHUB_RUN_NUMBER}}
          CI_BUILD_URL: https://github.com/${{env.GITHUB_REPOSITORY}}/actions/runs/${{github.job_id}}
          CI_JOB_URL: https://github.com/${{env.GITHUB_REPOSITORY}}/actions/runs/${{github.job_id}}
          CI_JOB_TITLE: Github ${github.job_id} ${macos}
          CI_STRING: Github actions
          CI_PULL_REQUEST_INFO: ${{github.event_name!='release'}}
          CI_TAG: ${{env.GITHUB_REF_NAME_SLUG}}
          CI_REPO: ${{env.GITHUB_REPOSITORY}}
          CI: True
          TARGET: x86_64-apple-darwin
          OPT_LEVEL: 0
          DEBUG: False
          PROFILE: release
          TARGET_CPU: nehalem
          NUGET_RUNTIME: osx-x64
          FETCH_COMMIT_SUFFIX: mac64
      - name: Test Release
        run: cargo test --all --release
      - name: Test Under Valgrind
        run: ./valgrind_existing.sh
        env:
          TARGET_DIR: target/
      - name: Build Docs
        run: cargo doc --all --release --no-deps
      - name: Create Artifacts Header
        run: |
          mkdir -p ./artifacts/staging/headers || true
          (
            cd ./${TARGET_DIR}doc
            tar czf "../docs.tar.gz" ./*
          )
          mv ./${TARGET_DIR}docs.tar.gz ./artifacts/staging/

          cp -R ./${TARGET_DIR}release/{imageflow_,libimageflow}*  ./artifacts/staging/
          cp bindings/headers/*.h  ./artifacts/staging/headers/
          cp bindings/headers/imageflow_default.h  ./artifacts/staging/imageflow.h
          cp ./ci/packaging_extras/{install,uninstall}.sh ./artifacts/staging
          rm ./artifacts/staging/*.{o,d,rlib} || true
          rm ./artifacts/staging/*-* || true
          (
            cd ./artifacts/staging
            tar czf "./archive.tar.gz" ./*
          )
          mkdir -p "./artifacts/upload/$(dirname "${ARTIFACT_UPLOAD_PATH}")" || true
          cp "${ARTIFACT_ARCHIVE_NAME}" "./artifacts/upload/${ARTIFACT_UPLOAD_PATH}.tar.gz"
          mkdir -p "./artifacts/upload/${DOCS_UPLOAD_DIR}" || true
          cp "${ARTIFACT_ARCHIVE_NAME}" "./artifacts/upload/${ARTIFACT_UPLOAD_PATH}.tar.gz"
        env:
          TARGET_DIR: target/
          ARTIFACT_UPLOAD_PATH: /imageflow-${{env.GITHUB_REF_NAME_SLUG}}-${{env.GITHUB_SHA_SHORT}}-macos
          ARTIFACT_ARCHIVE_NAME: ./artifacts/staging/archive.tar.gz
          DOCS_UPLOAD_DIR}: doc
      - name: Upload to release
        uses: Shopify/upload-to-release@master
        with:
          name: imageflow-${{env.GITHUB_REF_NAME_SLUG}}-${{env.GITHUB_SHA_SHORT}}-macos.tar.gz
          path: ./artifacts/upload/imageflow-${{env.GITHUB_REF_NAME_SLUG}}-${{env.GITHUB_SHA_SHORT}}-osX.tar.gz
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          content-type: text/plain

      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: ./artifacts/upload/
